# App title ----
titlePanel("Tabsets"),
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3"),
# Main panel for displaying outputs ----
mainPanel(
# Output: Tabset w/ plot, summary, and table ----
tabsetPanel(type = "tabs",
tabPanel("Plot of Cars", plotOutput("plot1")),
tabPanel("Plot of Pressure", plotOutput("plot2")),
tabPanel("Plot of Passengers", plotOutput("plot3"))
)
)
)
# Define server logic for random distribution app ----
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for random distribution app ----
ui <-
titlePanel("Tabsets"),
fluidPage(
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot of Cars", plotOutput("plot1")),
tabPanel("Plot of Pressure", plotOutput("plot2")),
tabPanel("Plot of Passengers", plotOutput("plot3"))
)
)
)
# Define server logic for random distribution app ----
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for random distribution app ----
ui <-
titlePanel("Tabsets"),
fluidPage(
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot of Cars", plotOutput("plot1")),
tabPanel("Plot of Pressure", plotOutput("plot2")),
tabPanel("Plot of Passengers", plotOutput("plot3"))
)
)
)
# Define server logic for random distribution app ----
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for random distribution app ----
ui <-
fluidPage(
titlePanel("Tabsets"),
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3"),
#  mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot of Cars", plotOutput("plot1")),
tabPanel("Plot of Pressure", plotOutput("plot2")),
tabPanel("Plot of Passengers", plotOutput("plot3"))
#   )
)
)
# Define server logic for random distribution app ----
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for random distribution app ----
ui <-
fluidPage(
titlePanel("Tabsets"),
#  mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot of Cars", plotOutput("plot1")),
tabPanel("Plot of Pressure", plotOutput("plot2")),
tabPanel("Plot of Passengers", plotOutput("plot3"))
#   )
)
)
# Define server logic for random distribution app ----
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("Sidebar Layout"),
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Value of sliderbar"),min = 0, max = 10, value = 5, step=0.1)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
output$txt<-renderText({ paste0("The selected value is ",input$sp)})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Sidebar Layout"),
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Value of sliderbar"),min = 0, max = 10, value = 5, step=0.1)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
output$txt<-renderText({ paste0("The selected value is ",input$sp)})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Sidebar Layout"),
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Value of sliderbar"),min = 0, max = 10, value = 5, step=0.1)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
output$txt<-renderText({ paste0("The selected value is ",input$sp)})
}
# Run the application
shinyApp(ui = ui, server = server)
#Homework - 4
#Name - Anuj Kapur
#Course - IE 6600
#Section - 01
library(shiny)
#Question 1
ui <- fluidPage(
# Application title
titlePanel("Widget Grid"),
hr(),
fluidRow(
column(width = 4,
actionButton("action", label = "Action")
),
column(width = 4,
checkboxInput("checkbox", label = "Choice A", value = TRUE)
),
column(width = 4,
checkboxGroupInput("checkGroup", label = h3("Checkbox group"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
dateInput("date", label = h3("Date input"), value = "2019-10-29")
),
column(width = 4,
dateRangeInput("dates", label = h3("Date range"))
),
column(width = 4,
fileInput("file", label = h3("File input"))
),
column(width = 4,
numericInput("num", label = h3("Numeric input"), value = 1)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
selectInput("select", label = h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
textInput("text", label = h3("Text input"), value = "Enter text...")
),
column(width = 4,
sliderInput("slider1", label = h3("Slider"), min = 0,
max = 100, value = 50)
),
column(width = 4,
sliderInput("slider2", label = h3("Slider Range"), min = 0,
max = 100, value = c(40, 60))
)
)
)
server <- function(input, output) {
output$value <- renderPrint({ input$action })
output$value <- renderPrint({ input$checkbox })
output$value <- renderPrint({ input$checkGroup })
output$value <- renderPrint({ input$date })
output$value <- renderPrint({ input$dates })
output$value <- renderPrint({
str(input$file)
})
output$value <- renderPrint({ input$num })
output$value <- renderPrint({ input$radio })
output$value <- renderPrint({ input$select })
output$value <- renderPrint({ input$slider1 })
output$range <- renderPrint({ input$slider2 })
output$value <- renderPrint({ input$text })
}
# Run the application
shinyApp(ui = ui, server = server)
#Homework - 4
#Name - Anuj Kapur
#Course - IE 6600
#Section - 01
library(shiny)
#Question 1
ui <- fluidPage(
# Application title
titlePanel("Widget Grid"),
hr(),
fluidRow(
column(width = 4,
actionButton("action", label = "Action")
),
column(width = 4,
checkboxInput("checkbox", label = "Choice A", value = TRUE)
),
column(width = 4,
checkboxGroupInput("checkGroup", label = h3("Checkbox group"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
dateInput("date", label = h3("Date input"), value = "2019-10-29")
),
column(width = 4,
dateRangeInput("dates", label = h3("Date range"))
),
column(width = 4,
fileInput("file", label = h3("File input"))
),
column(width = 4,
numericInput("num", label = h3("Numeric input"), value = 1)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
selectInput("select", label = h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
textInput("text", label = h3("Text input"), value = "Enter text...")
),
column(width = 4,
sliderInput("slider1", label = h3("Slider"), min = 0,
max = 100, value = 50)
),
column(width = 4,
sliderInput("slider2", label = h3("Slider Range"), min = 0,
max = 100, value = c(40, 60))
)
)
)
server <- function(input, output) {
output$value <- renderPrint({ input$action })
output$value <- renderPrint({ input$checkbox })
output$value <- renderPrint({ input$checkGroup })
output$value <- renderPrint({ input$date })
output$value <- renderPrint({ input$dates })
output$value <- renderPrint({
str(input$file)
})
output$value <- renderPrint({ input$num })
output$value <- renderPrint({ input$radio })
output$value <- renderPrint({ input$select })
output$value <- renderPrint({ input$slider1 })
output$range <- renderPrint({ input$slider2 })
output$value <- renderPrint({ input$text })
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("OQUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("OQUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Sidebar Layout"),
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Value of sliderbar"),min = 0, max = 10, value = 5, step=0.1)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
output$txt<-renderText({ paste0("The selected value is ",input$sp)})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("OQUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
hr(),
titlePanel("QUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
hr(),
titlePanel("QUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
hr(),
titlePanel("QUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
)
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
hr(),
titlePanel("QUestion 3"),
splitLayout(
sidebarLayout(
sidebarPanel(
sliderInput("sp", h1("Choose a number"),min = 1, max = 1000, value = 30, step=10)
),
column(width = 4,
radioButtons("radio", label = h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
),
column(width = 4,
actionButton("action", label = "Update")
),
mainPanel(
verbatimTextOutput("txt")
)
)
)
)
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
